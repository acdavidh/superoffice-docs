### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.RequestArgumentsInfo
  commentId: T:SuperOffice.CRM.Services.RequestArgumentsInfo
  id: RequestArgumentsInfo
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.RequestArgumentsInfo.#ctor
  - SuperOffice.CRM.Services.RequestArgumentsInfo.Arguments
  - SuperOffice.CRM.Services.RequestArgumentsInfo.Initialize(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  - SuperOffice.CRM.Services.RequestArgumentsInfo.MethodName
  langs:
  - csharp
  - vb
  name: RequestArgumentsInfo
  nameWithType: RequestArgumentsInfo
  fullName: SuperOffice.CRM.Services.RequestArgumentsInfo
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: 'public class RequestArgumentsInfo : Object, IRequestArgumentsInfo'
    content.vb: >-
      Public Class RequestArgumentsInfo

          Inherits Object

          Implements IRequestArgumentsInfo
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.Services.IRequestArgumentsInfo
  extensionMethods:
  - SuperOffice.CRM.Services.RequestArgumentsInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Services.RequestArgumentsInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Services.RequestArgumentsInfo)
  - SuperOffice.CRM.Services.RequestArgumentsInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Services.RequestArgumentsInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Services.RequestArgumentsInfo.Initialize(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:SuperOffice.CRM.Services.RequestArgumentsInfo.Initialize(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: Initialize(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: SuperOffice.CRM.Services.RequestArgumentsInfo
  langs:
  - csharp
  - vb
  name: Initialize(String, Dictionary<String, Object>)
  nameWithType: RequestArgumentsInfo.Initialize(String, Dictionary<String, Object>)
  fullName: SuperOffice.CRM.Services.RequestArgumentsInfo.Initialize(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public void Initialize(string methodName, Dictionary<string, object> args)
    parameters:
    - id: methodName
      type: System.String
    - id: args
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Sub Initialize(methodName As String, args As Dictionary(Of String, Object))
  overload: SuperOffice.CRM.Services.RequestArgumentsInfo.Initialize*
  implements:
  - SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  nameWithType.vb: RequestArgumentsInfo.Initialize(String, Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Services.RequestArgumentsInfo.Initialize(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: Initialize(String, Dictionary(Of String, Object))
- uid: SuperOffice.CRM.Services.RequestArgumentsInfo.#ctor
  commentId: M:SuperOffice.CRM.Services.RequestArgumentsInfo.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Services.RequestArgumentsInfo
  langs:
  - csharp
  - vb
  name: RequestArgumentsInfo()
  nameWithType: RequestArgumentsInfo.RequestArgumentsInfo()
  fullName: SuperOffice.CRM.Services.RequestArgumentsInfo.RequestArgumentsInfo()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public RequestArgumentsInfo()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Services.RequestArgumentsInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.RequestArgumentsInfo.MethodName
  commentId: P:SuperOffice.CRM.Services.RequestArgumentsInfo.MethodName
  id: MethodName
  parent: SuperOffice.CRM.Services.RequestArgumentsInfo
  langs:
  - csharp
  - vb
  name: MethodName
  nameWithType: RequestArgumentsInfo.MethodName
  fullName: SuperOffice.CRM.Services.RequestArgumentsInfo.MethodName
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public string MethodName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property MethodName As String
  overload: SuperOffice.CRM.Services.RequestArgumentsInfo.MethodName*
  implements:
  - SuperOffice.CRM.Services.IRequestArgumentsInfo.MethodName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Services.RequestArgumentsInfo.Arguments
  commentId: P:SuperOffice.CRM.Services.RequestArgumentsInfo.Arguments
  id: Arguments
  parent: SuperOffice.CRM.Services.RequestArgumentsInfo
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: RequestArgumentsInfo.Arguments
  fullName: SuperOffice.CRM.Services.RequestArgumentsInfo.Arguments
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public Dictionary<string, string> Arguments { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public ReadOnly Property Arguments As Dictionary(Of String, String)
  overload: SuperOffice.CRM.Services.RequestArgumentsInfo.Arguments*
  implements:
  - SuperOffice.CRM.Services.IRequestArgumentsInfo.Arguments
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo
  commentId: T:SuperOffice.CRM.Services.IRequestArgumentsInfo
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: IRequestArgumentsInfo
  nameWithType: IRequestArgumentsInfo
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo
- uid: SuperOffice.CRM.Services.RequestArgumentsInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<RequestArgumentsInfo, To>()
  nameWithType: EnumUtil.MapEnums<RequestArgumentsInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Services.RequestArgumentsInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of RequestArgumentsInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Services.RequestArgumentsInfo, To)()
  name.vb: MapEnums(Of RequestArgumentsInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<RequestArgumentsInfo, To>
    nameWithType: EnumUtil.MapEnums<RequestArgumentsInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Services.RequestArgumentsInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of RequestArgumentsInfo, To)
    nameWithType: EnumUtil.MapEnums(Of RequestArgumentsInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Services.RequestArgumentsInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.RequestArgumentsInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Services.RequestArgumentsInfo)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<RequestArgumentsInfo>(RequestArgumentsInfo)
  nameWithType: ObjectExtensions.AssignByReflection<RequestArgumentsInfo>(RequestArgumentsInfo)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Services.RequestArgumentsInfo>(SuperOffice.CRM.Services.RequestArgumentsInfo)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of RequestArgumentsInfo)(RequestArgumentsInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Services.RequestArgumentsInfo)(SuperOffice.CRM.Services.RequestArgumentsInfo)
  name.vb: AssignByReflection(Of RequestArgumentsInfo)(RequestArgumentsInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<RequestArgumentsInfo>
    nameWithType: ObjectExtensions.AssignByReflection<RequestArgumentsInfo>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Services.RequestArgumentsInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.RequestArgumentsInfo
    name: RequestArgumentsInfo
    nameWithType: RequestArgumentsInfo
    fullName: SuperOffice.CRM.Services.RequestArgumentsInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of RequestArgumentsInfo)
    nameWithType: ObjectExtensions.AssignByReflection(Of RequestArgumentsInfo)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Services.RequestArgumentsInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.RequestArgumentsInfo
    name: RequestArgumentsInfo
    nameWithType: RequestArgumentsInfo
    fullName: SuperOffice.CRM.Services.RequestArgumentsInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.RequestArgumentsInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<RequestArgumentsInfo>()
  nameWithType: ObjectExtensions.GraphCopy<RequestArgumentsInfo>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Services.RequestArgumentsInfo>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of RequestArgumentsInfo)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Services.RequestArgumentsInfo)()
  name.vb: GraphCopy(Of RequestArgumentsInfo)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<RequestArgumentsInfo>
    nameWithType: ObjectExtensions.GraphCopy<RequestArgumentsInfo>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Services.RequestArgumentsInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of RequestArgumentsInfo)
    nameWithType: ObjectExtensions.GraphCopy(Of RequestArgumentsInfo)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Services.RequestArgumentsInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.RequestArgumentsInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<RequestArgumentsInfo, To>()
  nameWithType: Converters.MapEnums<RequestArgumentsInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Services.RequestArgumentsInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of RequestArgumentsInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Services.RequestArgumentsInfo, To)()
  name.vb: MapEnums(Of RequestArgumentsInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<RequestArgumentsInfo, To>
    nameWithType: Converters.MapEnums<RequestArgumentsInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Services.RequestArgumentsInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of RequestArgumentsInfo, To)
    nameWithType: Converters.MapEnums(Of RequestArgumentsInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Services.RequestArgumentsInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Services.RequestArgumentsInfo.Initialize*
  commentId: Overload:SuperOffice.CRM.Services.RequestArgumentsInfo.Initialize
  isExternal: true
  name: Initialize
  nameWithType: RequestArgumentsInfo.Initialize
  fullName: SuperOffice.CRM.Services.RequestArgumentsInfo.Initialize
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: SuperOffice.CRM.Services.IRequestArgumentsInfo
  isExternal: true
  name: Initialize(String, Dictionary<String, Object>)
  nameWithType: IRequestArgumentsInfo.Initialize(String, Dictionary<String, Object>)
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize(System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)
  nameWithType.vb: IRequestArgumentsInfo.Initialize(String, Dictionary(Of String, Object))
  fullName.vb: SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize(System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: Initialize(String, Dictionary(Of String, Object))
  spec.csharp:
  - uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: Initialize
    nameWithType: IRequestArgumentsInfo.Initialize
    fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
    name: Initialize
    nameWithType: IRequestArgumentsInfo.Initialize
    fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: '!:System.Collections.Generic.Dictionary{System.String,System.Object}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.RequestArgumentsInfo.#ctor*
  commentId: Overload:SuperOffice.CRM.Services.RequestArgumentsInfo.#ctor
  isExternal: true
  name: RequestArgumentsInfo
  nameWithType: RequestArgumentsInfo.RequestArgumentsInfo
  fullName: SuperOffice.CRM.Services.RequestArgumentsInfo.RequestArgumentsInfo
- uid: SuperOffice.CRM.Services.RequestArgumentsInfo.MethodName*
  commentId: Overload:SuperOffice.CRM.Services.RequestArgumentsInfo.MethodName
  isExternal: true
  name: MethodName
  nameWithType: RequestArgumentsInfo.MethodName
  fullName: SuperOffice.CRM.Services.RequestArgumentsInfo.MethodName
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.MethodName
  commentId: P:SuperOffice.CRM.Services.IRequestArgumentsInfo.MethodName
  parent: SuperOffice.CRM.Services.IRequestArgumentsInfo
  isExternal: true
  name: MethodName
  nameWithType: IRequestArgumentsInfo.MethodName
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.MethodName
- uid: SuperOffice.CRM.Services.RequestArgumentsInfo.Arguments*
  commentId: Overload:SuperOffice.CRM.Services.RequestArgumentsInfo.Arguments
  isExternal: true
  name: Arguments
  nameWithType: RequestArgumentsInfo.Arguments
  fullName: SuperOffice.CRM.Services.RequestArgumentsInfo.Arguments
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.Arguments
  commentId: P:SuperOffice.CRM.Services.IRequestArgumentsInfo.Arguments
  parent: SuperOffice.CRM.Services.IRequestArgumentsInfo
  isExternal: true
  name: Arguments
  nameWithType: IRequestArgumentsInfo.Arguments
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.Arguments
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: '!:System.Collections.Generic.Dictionary{System.String,System.String}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
